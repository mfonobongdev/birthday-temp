import { closeToast } from "../../store/store.hooks";
import { useSelector } from "react-redux";
import { selectToasts } from "../../store/slice/ToasterSlice";

const ToastWidget = () => {
  const toasts = useSelector(selectToasts);
  return (
    <div className="fixed right-4 top-0 z-[1000] grid gap-y-4 pr-5 pt-5">
      {toasts.map((toast) => (
        <div
          style={{ boxShadow: "0px 20px 20px rgb(0 0 0 / 10%)" }}
          className={`flex max-w-[20rem] space-x-4 rounded-lg bg-white  p-[0.8125rem] md:min-w-[27rem] md:p-4 ${
            toast.isOpen ? "animate-slide" : "translate-x-[150vw]"
          } transition-transform duration-700`}
          key={`toast-${toast.id}`}
        >
          {toast.messageType === "success" ? (
            <svg
              width="40"
              height="41"
              viewBox="0 0 40 41"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="20"
                cy="20.5"
                r="20"
                fill="#2EB872"
                fillOpacity="0.12"
              />
              <path
                d="M26.7099 15.71C26.617 15.6163 26.5064 15.5419 26.3845 15.4911C26.2627 15.4403 26.132 15.4142 25.9999 15.4142C25.8679 15.4142 25.7372 15.4403 25.6154 15.4911C25.4935 15.5419 25.3829 15.6163 25.29 15.71L17.84 23.17L14.7099 20.03C14.6134 19.9367 14.4995 19.8634 14.3746 19.8142C14.2498 19.765 14.1165 19.7409 13.9823 19.7432C13.8481 19.7455 13.7157 19.7743 13.5926 19.8278C13.4695 19.8812 13.3582 19.9585 13.2649 20.055C13.1717 20.1515 13.0984 20.2654 13.0492 20.3903C13 20.5152 12.9759 20.6485 12.9782 20.7827C12.9805 20.9168 13.0092 21.0493 13.0627 21.1723C13.1162 21.2954 13.1934 21.4067 13.2899 21.5L17.13 25.34C17.2229 25.4337 17.3335 25.5081 17.4554 25.5589C17.5772 25.6096 17.7079 25.6358 17.84 25.6358C17.972 25.6358 18.1027 25.6096 18.2245 25.5589C18.3464 25.5081 18.457 25.4337 18.55 25.34L26.7099 17.18C26.8115 17.0863 26.8925 16.9727 26.9479 16.8462C27.0033 16.7197 27.0319 16.5831 27.0319 16.445C27.0319 16.3069 27.0033 16.1703 26.9479 16.0438C26.8925 15.9173 26.8115 15.8036 26.7099 15.71Z"
                fill="#2EB872"
              />
            </svg>
          ) : (
            <svg
              width="40"
              height="41"
              viewBox="0 0 40 41"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="20"
                cy="20.5"
                r="20"
                fill="#FA4659"
                fillOpacity="0.12"
              />
              <path
                d="M20 19.5C19.7348 19.5 19.4804 19.6054 19.2929 19.7929C19.1054 19.9804 19 20.2348 19 20.5V24.5C19 24.7652 19.1054 25.0196 19.2929 25.2071C19.4804 25.3946 19.7348 25.5 20 25.5C20.2652 25.5 20.5196 25.3946 20.7071 25.2071C20.8946 25.0196 21 24.7652 21 24.5V20.5C21 20.2348 20.8946 19.9804 20.7071 19.7929C20.5196 19.6054 20.2652 19.5 20 19.5ZM20.38 15.58C20.1365 15.48 19.8635 15.48 19.62 15.58C19.4973 15.6276 19.3851 15.699 19.29 15.79C19.2017 15.8872 19.1306 15.9988 19.08 16.12C19.024 16.2387 18.9966 16.3688 19 16.5C18.9992 16.6316 19.0245 16.7621 19.0742 16.8839C19.124 17.0057 19.1973 17.1166 19.29 17.21C19.3872 17.2983 19.4988 17.3694 19.62 17.42C19.7715 17.4822 19.936 17.5063 20.099 17.4901C20.2619 17.4739 20.4184 17.4179 20.5547 17.3271C20.691 17.2362 20.8029 17.1133 20.8805 16.9691C20.9582 16.8249 20.9992 16.6638 21 16.5C20.9963 16.2352 20.8927 15.9816 20.71 15.79C20.6149 15.699 20.5028 15.6276 20.38 15.58ZM20 10.5C18.0222 10.5 16.0888 11.0865 14.4443 12.1853C12.7998 13.2841 11.5181 14.8459 10.7612 16.6732C10.0043 18.5004 9.8063 20.5111 10.1922 22.4509C10.578 24.3907 11.5304 26.1725 12.9289 27.5711C14.3275 28.9696 16.1093 29.922 18.0491 30.3079C19.9889 30.6937 21.9996 30.4957 23.8268 29.7388C25.6541 28.9819 27.2159 27.7002 28.3147 26.0557C29.4135 24.4112 30 22.4778 30 20.5C30 19.1868 29.7413 17.8864 29.2388 16.6732C28.7363 15.4599 27.9997 14.3575 27.0711 13.4289C26.1425 12.5003 25.0401 11.7638 23.8268 11.2612C22.6136 10.7587 21.3132 10.5 20 10.5ZM20 28.5C18.4178 28.5 16.871 28.0308 15.5554 27.1518C14.2398 26.2727 13.2145 25.0233 12.609 23.5615C12.0035 22.0997 11.845 20.4911 12.1537 18.9393C12.4624 17.3874 13.2243 15.962 14.3432 14.8431C15.462 13.7243 16.8874 12.9624 18.4393 12.6537C19.9911 12.345 21.5997 12.5035 23.0615 13.109C24.5233 13.7145 25.7727 14.7398 26.6518 16.0554C27.5308 17.371 28 18.9177 28 20.5C28 22.6217 27.1572 24.6566 25.6569 26.1569C24.1566 27.6571 22.1217 28.5 20 28.5Z"
                fill="#FA4659"
              />
            </svg>
          )}
          <div className="flex flex-grow flex-col">
            <span className="text-[0.875rem] font-semibold md:text-lg">
              {toast.messageType === "success"
                ? "Success!"
                : "Something went wrong!"}
            </span>
            <p className="text-[0.8125rem] text-gray-500 md:text-base">
              {toast.text}
            </p>
          </div>
          <div onClick={() => closeToast(toast.id)} className="cursor-pointer">
            <svg
              width={32}
              height={32}
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle cx={16} cy={16} r={16} fill={"#EEF1F5"} />
              <path
                d="m20 12-8 8M12 12l8 8"
                stroke={"#434343"}
                strokeWidth={1.333}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </div>
        </div>
      ))}
    </div>
  );
};

export default ToastWidget;
